# Docker Compose configuration
version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: booking_facility,booking_service,payment_service,user_service
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  discovery-service:
    build: ./discovery-service
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - discovery-service
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/

  facility-service:
    build: ./facility-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - discovery-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/booking_facility
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/

  booking-service:
    build: ./booking-service
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - discovery-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/booking_service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/

  payment-service:
    build: ./payment-service
    ports:
      - "8083:8083"
    depends_on:
      - postgres
      - discovery-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/payment_service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/

  user-service:
    build: ./user-service
    ports:
      - "8084:8084"
    depends_on:
      - postgres
      - discovery-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user_service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/

  notification-service:
    build: ./notification-service
    ports:
      - "8085:8085"
    depends_on:
      - discovery-service
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/

volumes:
  postgres_data:

# Dockerfile for each service
## Create a file named 'Dockerfile' in each service directory with the following content:

# FROM eclipse-temurin:17-jdk-alpine
# VOLUME /tmp
# COPY target/*.jar app.jar
# ENTRYPOINT ["java","-jar","/app.jar"]